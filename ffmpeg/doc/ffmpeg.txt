1.网址
https://github.com/yinwenjie/FFmpeg_Tutorial

2.FFmpeg基本数据结构

				   |--AVInputFormat
AVFormatContext----|--AVStream[0]------AVCodecContext------AVCodec
				   |--AVStream[1]------AVCodecContext------AVCodec

AVPacket----(decode)---->AVFrame

3.FFmpeg相关结构体简介
->AVFormatContext
封装格式上下文结构体，也是统领全局的结构体，保存了视频文件封装格式相关信息。

->AVInputFormat
各种封装格式（例如FLV MKV MP4 AVI）对应一个该结构体

->AVStream
视频文件中每个视频流/音频流对应一个该结构体

->AVCodecContext
解码器上下文结构体，保存了视频/音频编解码相关信息

->AVCodec
每种视频/音频编解码器（例如H264解码器）对应一个该结构体

->AVPacket
存储一帧压缩编码数据

->AVFrame
存储一帧解码后像素数据

3.FFmpeg相关结构体分析
->AVFormatContext
iformat：输入视频的AVInputFormat
nb_streams：输入视频的AVStream个数
streams：输入视频的AVStream[]数组
duration：输入视频的时长(单位为微秒)
bit_rate：输入媒体文件的整体码率

->AVInputFormat
name：封装格式名称
long_name：封装格式长名称
extensions：封装格式扩展名
id：封装格式ID
一些封装格式处理的接口函数

->AVStream
id：序号
codec：该流对应的AVCodecContext
time_base：该流的时基（实际播放时间=time_base*pts）
r_frame_rate：该流的帧率

->AVCodecContext
codec：编解码器的AVCodec
width，height：图像的宽高（只针对视频）
pix_fmt：像素格式（只针对视频）
sample_rate：采样率（只针对音频）
channels：声道数（只针对音频）
sample_fmt：采样格式（只针对音频）
bit_rate：码率（编码时如果需要控制码率就设置这个参数，解码时通过这个参数可以获得具体的音频或视频的码率）

->AVCodec
name：编解码器名称
long_name：编解码器长名称
type：编解码器类型
id：编解码器ID
一些编解码器接口函数

->AVPacket
pts：显示时间戳
dts：解码时间戳
data：压缩编码数据
size：压缩编码数据大小
stream_index：所属的AVStream

->AVFrame
data：解码后的图像像素数据/音频采样数据
linesize：对视频来说就是图像中一行像素的大小，对音频来说就是整个音频帧的大小
width,height：图像的宽高（只针对视频） （linesize比width一般要大，大的这部分就是视频的黑边）
key_frame：是否为关键帧
pict_type：帧类型（只针对视频），例如I P B
